rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return request.auth != null && request.auth.uid == userId;
    }
    
    function isValidImageUpload() {
      return request.resource.size <= 10 * 1024 * 1024 // 10MB max
          && request.resource.contentType.matches('image/.*');
    }
    
    function isValidVideoUpload() {
      return request.resource.size <= 100 * 1024 * 1024 // 100MB max
          && request.resource.contentType.matches('video/.*');
    }

    // User profile pictures and backgrounds
    match /users/{userId}/profile/{fileName} {
      allow read: if isAuthenticated();
      allow write: if isOwner(userId) && isValidImageUpload();
    }
    
    // User uploaded content (posts, etc.)
    match /users/{userId}/uploads/{fileName} {
      allow read: if isAuthenticated();
      allow write: if isOwner(userId) && (isValidImageUpload() || isValidVideoUpload());
    }
    
    // Public content (accessible to all authenticated users)
    match /public/{fileName} {
      allow read: if isAuthenticated();
      allow write: if false; // Only backend/admin can write
    }
    
    // Vessel photos and documentation
    match /vessels/{vesselId}/{fileName} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated() && isValidImageUpload();
    }
    
    // Marketplace listings
    match /marketplace/{listingId}/{fileName} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated() && isValidImageUpload();
    }
    
    // Default deny for all other paths
    match /{allPaths=**} {
      allow read, write: if false;
    }
  }
}